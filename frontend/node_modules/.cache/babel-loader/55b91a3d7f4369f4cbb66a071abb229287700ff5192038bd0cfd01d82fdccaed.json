{"ast":null,"code":"var _jsxFileName = \"/Users/gadson/Desktop/project/my-react-app/src/ChatApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const sendMessage = async () => {\n    // Send message to the backend\n    const response = await fetch('/api/messages', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: newMessage\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n\n    // Clear the message input\n    setNewMessage('');\n  };\n  useEffect(() => {\n    // Fetch and display messages from the backend\n    const fetchMessages = async () => {\n      const response = await fetch('/api/messages');\n      const result = await response.json();\n      setMessages(result);\n    };\n    fetchMessages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [msg.sender === 'user' ? 'User: ' : 'Agent: ', msg.text]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"ppYy//Iy9fHF0/R/fKleZlFUFyc=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ChatApp","_s","messages","setMessages","newMessage","setNewMessage","sendMessage","response","fetch","method","headers","body","JSON","stringify","message","result","json","console","log","fetchMessages","children","map","msg","sender","text","id","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/gadson/Desktop/project/my-react-app/src/ChatApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ChatApp = () => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n\n  const sendMessage = async () => {\n    // Send message to the backend\n    const response = await fetch('/api/messages', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ message: newMessage }),\n    });\n\n    const result = await response.json();\n    console.log(result);\n\n    // Clear the message input\n    setNewMessage('');\n  };\n\n  useEffect(() => {\n    // Fetch and display messages from the backend\n    const fetchMessages = async () => {\n      const response = await fetch('/api/messages');\n      const result = await response.json();\n      setMessages(result);\n    };\n\n    fetchMessages();\n  }, []);\n\n  return (\n    <div>\n      <div>\n        {messages.map((msg) => (\n          <div key={msg.id}>\n            {msg.sender === 'user' ? 'User: ' : 'Agent: '}\n            {msg.text}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={newMessage}\n        onChange={(e) => setNewMessage(e.target.value)}\n      />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n};\n\nexport default ChatApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAEV;MAAW,CAAC;IAC9C,CAAC,CAAC;IAEF,MAAMW,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACpCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;;IAEnB;IACAV,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAEDR,SAAS,CAAC,MAAM;IACd;IACA,MAAMsB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;MAC7C,MAAMO,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACpCb,WAAW,CAACY,MAAM,CAAC;IACrB,CAAC;IAEDI,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EACGlB,QAAQ,CAACmB,GAAG,CAAEC,GAAG,iBAChBvB,OAAA;QAAAqB,QAAA,GACGE,GAAG,CAACC,MAAM,KAAK,MAAM,GAAG,QAAQ,GAAG,SAAS,EAC5CD,GAAG,CAACE,IAAI;MAAA,GAFDF,GAAG,CAACG,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN9B,OAAA;MACE+B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE3B,UAAW;MAClB4B,QAAQ,EAAGC,CAAC,IAAK5B,aAAa,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF9B,OAAA;MAAQoC,OAAO,EAAE7B,WAAY;MAAAc,QAAA,EAAC;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAlDID,OAAO;AAAAoC,EAAA,GAAPpC,OAAO;AAoDb,eAAeA,OAAO;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}